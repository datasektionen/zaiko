##
## ---------------build frontend-----------------------
##

FROM oven/bun:1 AS base
WORKDIR /usr/src/app

ENV VITE_HOST=http://localhost:8080
ENV VITE_HOST_FRONTEND=http://localhost:8080

RUN apt update -y && apt upgrade -y && apt install -y unzip

FROM base AS install
RUN mkdir -p /temp/dev
COPY package.json bun.lock /temp/dev/
RUN cd /temp/dev && bun install --frozen-lockfile

RUN mkdir -p /temp/prod
COPY package.json bun.lock /temp/prod/
RUN cd /temp/prod && bun install --frozen-lockfile --production

FROM base AS prerelease
COPY --from=install /temp/dev/node_modules node_modules
COPY package.json bun.lock cypress.config.ts index.html tsconfig.app.json tsconfig.node.json vite.config.ts cypress dist env.d.ts eslint.config.js public src tsconfig.json tsconfig.vitest.json vitest.config.ts .

ENV NODE_ENV=development
RUN bun test
RUN bun run build-only # FIXME

##
## -------------build backend-------------------------
##

FROM rust:1.84-alpine AS build
WORKDIR /build

RUN apk update && apk add git alpine-sdk make libffi-dev openssl-dev pkgconfig bash postgresql
RUN cargo install cargo-watch

COPY --from=prerelease /usr/src/app/dist ../dist

COPY backend/Cargo.lock backend/Cargo.toml .

RUN mkdir src
RUN echo "pub fn test() {}" > src/lib.rs

COPY backend/.sqlx .sqlx

RUN cargo build

RUN rm -r src

COPY backend/src src

EXPOSE 8000

ENV SQLX_OFFLINE=true
ENV RUST_LOG=debug

CMD ["cargo", "watch", "--why", "-x", "run"]
