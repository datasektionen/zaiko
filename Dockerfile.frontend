FROM rust:1.84-alpine AS build
WORKDIR /build

ENV SQLX_OFFLINE=true

##
## -------------build backend-------------------------
##

RUN apk update && apk add git alpine-sdk make libffi-dev openssl-dev pkgconfig bash postgresql

COPY backend/Cargo.lock backend/Cargo.toml .
COPY backend/.sqlx .sqlx

RUN mkdir src
RUN echo "pub fn test() {}" > src/lib.rs

RUN cargo build --locked

RUN rm -r src

EXPOSE 8080

COPY backend/src src
RUN cargo build

FROM oven/bun:1 AS base
WORKDIR /usr/src/app

##
## ---------------build frontend-----------------------
##

RUN apt update -y && apt upgrade -y && apt install -y unzip

COPY --from=build /build/target/debug/backend backend

COPY package.json bun.lock .
RUN bun install --frozen-lockfile

COPY package.json bun.lock cypress.config.ts index.html tsconfig.app.json tsconfig.node.json vite.config.ts env.d.ts eslint.config.js tsconfig.json tsconfig.vitest.json vitest.config.ts .
COPY public  public
COPY cypress  cypress
COPY src src

ENV NODE_ENV=development

RUN echo "./backend &" >> ./run
RUN echo "bun run dev --host 0.0.0.0" >> ./run

CMD ["bash", "./run"]
